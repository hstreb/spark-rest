apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'application'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '1.0'

mainClassName = "org.sample.App"

jar {

	baseName = "spark-rest"

	from({configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }}) {
		exclude "META-INF/*.SF"
		exclude "META-INF/*.DSA"
		exclude "META-INF/*.RSA"
	}

	manifest {
		attributes 'Main-Class': mainClassName
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compile 'com.sparkjava:spark-core:2.2'
	compile 'com.google.code.gson:gson:2.3.1'
	compile 'log4j:log4j:1.2.17'

	testCompile ('junit:junit:4.12') { transitive false }
	testCompile ('org.hamcrest:java-hamcrest:2.0.0.0') { transitive false }
}

test {
	testLogging {
		events "passed", "skipped", "failed", "standardOut", "standardError"
		afterSuite { desc, result ->
			if (!desc.parent) {
				println "Results: ${result.resultType} (Total: ${result.testCount}, Passed: ${result.successfulTestCount}, Failed: ${result.failedTestCount}, Skipped: ${result.skippedTestCount})"
			}
		}
	}
	jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpFile = file("$buildDir/jacoco/classpathdumps")
    }
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.6'
}